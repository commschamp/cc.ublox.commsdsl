name: Github Actions Build

on: [push]

env:
  COMMS_BRANCH: develop
  COMMSDSL_BRANCH: develop
  CC_TOOLS_QT_BRANCH: develop

jobs:
  build_gcc_old_ubuntu_20_04:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [4.8]
        cpp: [11]

    steps:
    - uses: actions/checkout@v2

    - name: Add repositories
      run: |
        sudo add-apt-repository 'deb http://archive.ubuntu.com/ubuntu/ bionic main'; \
        sudo add-apt-repository 'deb http://archive.ubuntu.com/ubuntu/ bionic universe'     

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install libqt5gui5 qtbase5-dev libboost-all-dev libxml2-dev gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}} gcc-8 g++-8

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build    

    - name: Prepare externals
      shell: bash
      run: $GITHUB_WORKSPACE/script/prepare_externals.sh
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}
        CC_COMMSDSL: gcc-8
        CXX_COMMSDSL: g++-8
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMS_TAG: ${{env.COMMS_BRANCH}}
        COMMSDSL_TAG: ${{env.COMMSDSL_BRANCH}}
        CC_TOOLS_QT_SKIP: 1

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install \
        -DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install \
        -DCMAKE_CXX_STANDARD=${{matrix.cpp}} -DUBLOX_GEN_PROTOCOL=ON -DUBLOX_GEN_TEST=ON \
        -DUBLOX_SCHEMA_FILES_LIST_FILE=$GITHUB_WORKSPACE/basic_msgs.txt
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

  build_gcc_ubuntu_20_04:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [5, 6, 7, 8]
        cpp: [11, 14, 17]
        exclude:
          - cc_ver: 5
            cpp: 17        
          - cc_ver: 6
            cpp: 17
          - cc_ver: 7
            cpp: 17            
    steps:
    - uses: actions/checkout@v2

    - name: Add repositories
      run: |
        sudo add-apt-repository 'deb http://archive.ubuntu.com/ubuntu/ bionic main'; \
        sudo add-apt-repository 'deb http://archive.ubuntu.com/ubuntu/ bionic universe'      

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install libqt5gui5 qtbase5-dev libboost-all-dev libxml2-dev gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}} gcc-8 g++-8

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build      

    - name: Prepare externals
      shell: bash
      run: $GITHUB_WORKSPACE/script/prepare_externals.sh
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}
        CC_COMMSDSL: gcc-8
        CXX_COMMSDSL: g++-8        
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMS_TAG: ${{env.COMMS_BRANCH}}
        COMMSDSL_TAG: ${{env.COMMSDSL_BRANCH}}
        CC_TOOLS_QT_TAG: ${{env.CC_TOOLS_QT_BRANCH}}

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install \
        -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
        -DUBLOX_GEN_PROTOCOL=ON -DUBLOX_GEN_TEST=ON -DUBLOX_GEN_TOOLS=ON -DUBLOX_BUILD_EXAMPLES=ON \
        -DUBLOX_SCHEMA_FILES_LIST_FILE=$GITHUB_WORKSPACE/basic_msgs.txt
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 
      
  build_gcc_ubuntu_22_04:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [9, 10, 11, 12]
        cpp: [11, 14, 17, 20]

    steps:
    - uses: actions/checkout@v2

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: |
        sudo apt install libqt5gui5 qtbase5-dev libboost-all-dev libxml2-dev gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}} \
        python3 libpython3-dev swig default-jdk default-jre emscripten

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build      

    - name: Prepare externals
      shell: bash
      run: $GITHUB_WORKSPACE/script/prepare_externals.sh
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMS_TAG: ${{env.COMMS_BRANCH}}
        COMMSDSL_TAG: ${{env.COMMSDSL_BRANCH}}
        CC_TOOLS_QT_TAG: ${{env.CC_TOOLS_QT_BRANCH}}

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install \
        -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
        -DUBLOX_GEN_PROTOCOL=ON -DUBLOX_GEN_TEST=ON -DUBLOX_GEN_TOOLS=ON \
        -DUBLOX_GEN_SWIG=ON -DUBLOX_GEN_EMSCRIPTEN=ON -DUBLOX_BUILD_EXAMPLES=ON \
        -DUBLOX_SCHEMA_FILES_LIST_FILE=$GITHUB_WORKSPACE/basic_msgs.txt
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 
      
  build_clang_old_ubuntu_20_04:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: ["4.0", "5.0", "6.0"]
        cpp: [11, 14, 17]
        exclude:
          - cc_ver: "4.0"
            cpp: 17


    steps:
    - uses: actions/checkout@v2

    - name: Add repositories
      run: |
        sudo add-apt-repository 'deb http://archive.ubuntu.com/ubuntu/ bionic main'; \
        sudo add-apt-repository 'deb http://archive.ubuntu.com/ubuntu/ bionic universe'      

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install libqt5gui5 qtbase5-dev libboost-all-dev libxml2-dev clang-${{matrix.cc_ver}} clang-6.0


    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build      

    - name: Prepare externals
      shell: bash
      run: $GITHUB_WORKSPACE/script/prepare_externals.sh
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}
        CC_COMMSDSL: clang-6.0
        CXX_COMMSDSL: clang++-6.0
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMS_TAG: ${{env.COMMS_BRANCH}}
        COMMSDSL_TAG: ${{env.COMMSDSL_BRANCH}}
        CC_TOOLS_QT_TAG: ${{env.CC_TOOLS_QT_BRANCH}}

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install \
        -DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install \
        -DCMAKE_CXX_STANDARD=${{matrix.cpp}} -DUBLOX_GEN_PROTOCOL=ON -DUBLOX_GEN_TEST=ON \
        -DUBLOX_GEN_TOOLS=ON -DUBLOX_BUILD_EXAMPLES=ON \
        -DUBLOX_SCHEMA_FILES_LIST_FILE=$GITHUB_WORKSPACE/basic_msgs.txt
      env:
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

  build_clang_ubuntu_20_04:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [7, 8, 9, 10, 11]
        cpp: [11, 14, 17, 20]
        exclude:
          - cc_ver: 7
            cpp: 20
          - cc_ver: 8
            cpp: 20

    steps:
    - uses: actions/checkout@v2

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install libqt5gui5 qtbase5-dev libboost-all-dev libxml2-dev clang-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build      

    - name: Prepare externals
      shell: bash
      run: $GITHUB_WORKSPACE/script/prepare_externals.sh
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMS_TAG: ${{env.COMMS_BRANCH}}
        COMMSDSL_TAG: ${{env.COMMSDSL_BRANCH}}
        CC_TOOLS_QT_TAG: ${{env.CC_TOOLS_QT_BRANCH}} 

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install \
        -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
        -DUBLOX_GEN_PROTOCOL=ON -DUBLOX_GEN_TEST=ON -DUBLOX_GEN_TOOLS=ON -DUBLOX_BUILD_EXAMPLES=ON \
        -DUBLOX_SCHEMA_FILES_LIST_FILE=$GITHUB_WORKSPACE/basic_msgs.txt
      env:
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

  build_clang_ubuntu_22_04:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [12, 13, 14]
        cpp: [11, 14, 17, 20]

    steps:
    - uses: actions/checkout@v2

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: |
        sudo apt install libqt5gui5 qtbase5-dev libboost-all-dev libxml2-dev clang-${{matrix.cc_ver}} \
        python3 libpython3-dev swig  default-jdk default-jre emscripten

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build      

    - name: Prepare externals
      shell: bash
      run: $GITHUB_WORKSPACE/script/prepare_externals.sh
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMS_TAG: ${{env.COMMS_BRANCH}}
        COMMSDSL_TAG: ${{env.COMMSDSL_BRANCH}}
        CC_TOOLS_QT_TAG: ${{env.CC_TOOLS_QT_BRANCH}} 

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install \
        -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
        -DUBLOX_GEN_PROTOCOL=ON -DUBLOX_GEN_TEST=ON -DUBLOX_GEN_TOOLS=ON \
        -DUBLOX_GEN_SWIG=ON -DUBLOX_GEN_EMSCRIPTEN=ON -DUBLOX_BUILD_EXAMPLES=ON \
        -DUBLOX_SCHEMA_FILES_LIST_FILE=$GITHUB_WORKSPACE/basic_msgs.txt
      env:
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 
